/*
 * Copyright 2013 Herb Bowie
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.powersurgepub.psdatalib.ui;

  import com.powersurgepub.psutils.*;
  import com.powersurgepub.xos2.*;
  import java.io.*;
  import java.net.*;
  import javax.swing.*;

/**
 A panel that can serve as a label for a hyperlink, while also offering some
 associated capabilities made available via buttons. 

 @author Herb Bowie
 */
public class LinkLabel 
    extends JPanel {

  private JFrame                frame = null;
  private JTextArea             linkText = null;
  private LinkTweakerInterface  linkTweaker = null;

  /**
   Creates new form LinkLabel
   */
  public LinkLabel() {
    initComponents();
  }
  
  public LinkLabel (String labelText) {
    initComponents();
    setLabelText(labelText);
  }
  
  public void setLabelText (String labelText) {
    linkComboBox.removeItemAt(0);
    linkComboBox.insertItemAt(labelText, 0);
    linkComboBox.setSelectedIndex(0);
  }
  
  public String getLabelText() {
    String linkLabel = (String)linkComboBox.getItemAt(0);
    return linkLabel;
  }
  
  public void setLinkTextArea (JTextArea linkText) {
    this.linkText = linkText;
  }
  
  public void setLinkTweaker (LinkTweakerInterface linkTweaker) {
    this.linkTweaker = linkTweaker;
  }
  
  public void setFrame (JFrame frame) {
    this.frame = frame;
  }
  
  public void tweak() {
    if (linkText != null
        && linkText.getText().length() > 0
        && linkTweaker != null
        && linkTweaker instanceof WindowToManage) {
      linkTweaker.setLink(linkText.getText(), getLabelText());
      linkTweaker.setLocation(
        this.getX() + 60,
        this.getY() + 60);
      WindowToManage linkTweakerWindow = (WindowToManage)linkTweaker;
      WindowMenuManager.getShared().makeVisible(linkTweakerWindow);
    }
  }
  
  public void selectFromDisk() {
    if (linkText != null) {
      XFileChooser chooser = new XFileChooser ();
      chooser.setDialogTitle ("Select File or Folder as URL");
      chooser.setFileSelectionMode(XFileChooser.FILES_AND_DIRECTORIES);
      String syncFolderStr = null;
      File syncFolder = null;
      File homeDir = Home.getShared().getUserHome();
      if (homeDir != null) {
        chooser.setCurrentDirectory (homeDir);
      }
      File result = chooser.showOpenDialog (frame);
      if (result != null) {
        try {
          String webPage = result.toURI().toURL().toString();
          linkText.setText (webPage);
        } catch (MalformedURLException e) {
          // do nothing
        }
      }    
    }
  }
  
  public void launch() {
    if (linkText != null) {
      Home.getShared().openURL(linkText.getText());
    }
  }

  /**
   This method is called from within the constructor to initialize the form.
   WARNING: Do NOT modify this code. The content of this method is always
   regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    linkComboBox = new javax.swing.JComboBox();

    setBorder(javax.swing.BorderFactory.createEtchedBorder());
    setLayout(new java.awt.GridBagLayout());

    linkComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Link:", "Tweak...", "Disk File...", "Launch..." }));
    linkComboBox.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        linkComboBoxActionPerformed(evt);
      }
    });
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 0;
    gridBagConstraints.insets = new java.awt.Insets(4, 4, 4, 4);
    add(linkComboBox, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents

  private void linkComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_linkComboBoxActionPerformed
    JComboBox box = (JComboBox)evt.getSource();
    int action = box.getSelectedIndex();
    switch (action) {
      case 1: 
        tweak();
        break;
      case 2:
        selectFromDisk();
        break;
      case 3:
        launch();
        break;
      default:
        break;
    }
    box.setSelectedIndex(0);
  }//GEN-LAST:event_linkComboBoxActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JComboBox linkComboBox;
  // End of variables declaration//GEN-END:variables
}
